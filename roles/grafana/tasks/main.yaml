- name: Create grafana directories
  ansible.builtin.file:
    path: "/opt/grafana/provisioning/{{ item }}"
    state: directory
    recurse: yes
  loop:
    - dashboards
    - datasources

- name: Change grafana config
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /opt/grafana/grafana.ini
  no_log: true

- name: Configuration for dashboards
  ansible.builtin.template:
    src: dashboards.yaml.j2
    dest: /opt/grafana/provisioning/dashboards/default.yaml

- name: Configure main dashboard
  ansible.builtin.copy:
    src: main.json
    dest: /opt/grafana/provisioning/dashboards/main.json

- name: Configure syslog dashboard
  ansible.builtin.copy:
    src: syslog.json
    dest: /opt/grafana/provisioning/dashboards/syslog.json

- name: Configure MySQL dashboard
  ansible.builtin.copy:
    src: mysql.json
    dest: /opt/grafana/provisioning/dashboards/mysql.json

- name: Configure Prometheus as default datasource
  ansible.builtin.template:
    src: prometheus_ds.yaml.j2
    dest: /opt/grafana/provisioning/datasources/prometheus.yaml

- name: Configure Influx-Telegraf datasource
  ansible.builtin.template:
    src: influx_telegraf_ds.yaml.j2
    dest: /opt/grafana/provisioning/datasources/influx_telegraf_ds.yaml

- name: Configure Influx-Latency datasource
  ansible.builtin.template:
    src: influx_latency_ds.yaml.j2
    dest: /opt/grafana/provisioning/datasources/influx_latency_ds.yaml

- name: Create grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana
    container_default_behavior: no_defaults
    volumes: /opt/grafana:/etc/grafana
    published_ports: "{{ grafana_port }}:3000"
    restart_policy: unless-stopped